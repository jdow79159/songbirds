{"version":3,"sources":["utils/myLib.js","store/types.js","store/reducers/birds.js","data.js","store/index.js","components/QuestionNavigator.js","components/AppPlayer.js","store/actions/birds.js","components/Question.js","components/Next.js","components/AnswerItem.js","components/AnswerList/AnswerList.js","components/BirdInfo.js","components/Information.js","components/Logo.js","components/Header.js","components/Quiz.js","components/Report/Report.js","components/Loading.js","components/ErrorLoading.js","components/Main.js","App.js","index.js"],"names":["pad","string","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","shuffle","arr","array","i","length","j","Math","floor","random","temp","makeQuestions","sourceArr","portion","count","questions","shuffleSource","shuffleSourceIdx","map","el","id","c","question","correctAnswer","correct","clicked","push","filter","index","forEach","anotherAnswer","find","item","initialState","loading","data","error","currentQuestionId","questionsNames","isGetCorrectAnswer","activeId","totalScore","localScore","playing","rootReducer","combineReducers","birds","state","action","type","payload","idx","findIndex","answer","createStore","applyMiddleware","thunk","useSelector","currentQuestion","questionsContent","q","className","key","AppPlayer","url","setPlaying","useState","setLoading","seeking","setSeeking","played","setPlayed","duration","setDuration","ref","useRef","useEffect","timeStart","timeFinish","playPauseIcon","visualPlayer","onClick","aria-hidden","min","max","value","onChange","e","parseFloat","target","onMouseUp","current","seekTo","onMouseDown","step","spinner","role","width","height","onDuration","onProgress","playedSeconds","onEnded","onReady","loadData","dispatch","a","fetch","response","ok","Error","json","useDispatch","image","src","img","alt","name","aria-label","style","fontSize","title","minHeight","audio","disabled","AnswerItem","onAnswerClick","answers","setUrl","setKey","onClickAnswer","latinName","description","isClickedSomeAnswer","some","BirdInfo","score","Logo","Header","QuestionNavigator","Question","Next","Information","restart","win","isError","isLoading","isFinished","ErrorLoading","Loading","content","Report","Quiz","App","store","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5944859f.chunk.js","sourcesContent":["function pad(string) {\n  return `0${string}`.slice(-2);\n}\n\nexport function format(seconds) {\n  const date = new Date(seconds * 1000);\n  const hh = date.getUTCHours();\n  const mm = date.getUTCMinutes();\n  const ss = pad(date.getUTCSeconds());\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`;\n  }\n  return `${mm}:${ss}`;\n}\n\nfunction shuffle(arr) {\n  const array = [...arr];\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\nexport function makeQuestions(sourceArr, portion = 6, count = 5) {\n  const questions = [];\n  const shuffleSource = shuffle(sourceArr);\n  const shuffleSourceIdx = shuffleSource.map((el) => el.id);\n  const c = count < shuffleSourceIdx.length ? count : shuffleSourceIdx.length;\n  for (let i = 0; i < c; i += 1) {\n    const question = [];\n    const correctAnswer = { ...shuffleSource[i], correct: true, clicked: false };\n    question.push(correctAnswer);\n    const otherShuffleSourceIdx = shuffleSourceIdx.filter(\n      (el, index) => index !== i,\n    );\n    const portionIdx = shuffle(otherShuffleSourceIdx).slice(\n      0,\n      portion <= 0 ? 5 : portion - 1,\n    );\n    portionIdx.forEach((el) => {\n      const anotherAnswer = shuffleSource.find((item) => item.id === el);\n      anotherAnswer.correct = false;\n      anotherAnswer.clicked = false;\n      question.push(anotherAnswer);\n    });\n    questions.push(shuffle(question));\n  }\n  return questions;\n}\n","export const LOAD_DATA = 'LOAD_DATA';\nexport const START_LOADING = 'START_LOADING';\nexport const ON_CLICK_ANSWER = 'ON_CLICK_ANSWER';\nexport const ON_CLICK_NEXT_QUESTION = 'ON_CLICK_NEXT_QUESTION';\nexport const ON_CLICK_RESTART = 'ON_CLICK_RESTART';\nexport const ON_SET_PLAYING = 'ON_SET_PLAYING';\n","import { makeQuestions } from '../../utils/myLib';\nimport {\n  LOAD_DATA,\n  ON_CLICK_ANSWER,\n  ON_CLICK_NEXT_QUESTION,\n  ON_CLICK_RESTART,\n  ON_SET_PLAYING,\n  START_LOADING,\n} from '../types';\nimport {\n  LOSE_SCORE_FOR_MISTAKE,\n  MAX_SCORE_FOR_QUESTION,\n  QUESTION_NAMES,\n} from '../../data';\n\nexport const initialState = {\n  loading: true,\n  data: [],\n  error: false,\n  currentQuestionId: 0,\n  questionsNames: QUESTION_NAMES,\n  questions: [],\n  isGetCorrectAnswer: false,\n  activeId: null,\n  totalScore: 0,\n  localScore: MAX_SCORE_FOR_QUESTION,\n  playing: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DATA: {\n      const { error } = action.payload;\n      return {\n        ...state,\n        data: action.payload.data,\n        questions: error ? [] : makeQuestions(action.payload.data),\n        loading: false,\n        error,\n      };\n    }\n    case START_LOADING:\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    case ON_CLICK_ANSWER: {\n      const { currentQuestionId } = state;\n      const idx = state.questions[currentQuestionId].findIndex(\n        (el) => el.id === action.payload,\n      );\n      const answer = { ...state.questions[currentQuestionId][idx] };\n      if (!state.isGetCorrectAnswer && !answer.clicked) {\n        answer.clicked = true;\n        const isGetCorrectAnswer = answer.correct;\n        const totalScore = isGetCorrectAnswer\n          ? state.totalScore + state.localScore\n          : state.totalScore;\n        const localScore = isGetCorrectAnswer\n          ? MAX_SCORE_FOR_QUESTION\n          : state.localScore - LOSE_SCORE_FOR_MISTAKE;\n        const playing = isGetCorrectAnswer ? false : state.playing;\n        const question = [\n          ...state.questions[currentQuestionId].slice(0, idx),\n          answer,\n          ...state.questions[currentQuestionId].slice(idx + 1),\n        ];\n        const questions = [\n          ...state.questions.slice(0, currentQuestionId),\n          question,\n          ...state.questions.slice(currentQuestionId + 1),\n        ];\n        return {\n          ...state,\n          questions,\n          isGetCorrectAnswer,\n          activeId: action.payload,\n          localScore,\n          totalScore,\n          playing,\n        };\n      }\n      return { ...state, activeId: action.payload };\n    }\n    case ON_CLICK_NEXT_QUESTION:\n      return state.questions.length - 1 > state.currentQuestionId\n        && state.isGetCorrectAnswer\n        ? {\n          ...state,\n          currentQuestionId: state.currentQuestionId + 1,\n          isGetCorrectAnswer: false,\n          activeId: null,\n        }\n        : state;\n    case ON_CLICK_RESTART:\n      return {\n        ...initialState,\n        loading: false,\n        data: state.data,\n        questions: makeQuestions(state.data),\n      };\n    case ON_SET_PLAYING:\n      return {\n        ...state,\n        playing: !state.playing,\n      };\n\n    default:\n      return state;\n  }\n};\n","export const MIN_HEIGHT_IMAGE = 350;\nexport const SERVER = 'https://frozen-dawn-89705.herokuapp.com/api/questions/';\nexport const QUESTION_NAMES = ['Вопрос 1', 'Вопрос 2', 'Вопрос 3', 'Вопрос 4', 'Вопрос 5'];\nexport const MAX_SCORE_FOR_QUESTION = 5;\nexport const LOSE_SCORE_FOR_MISTAKE = 1;\nexport const MAX_SCORE = 30;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport birdsReducer from './reducers/birds';\n\nexport const rootReducer = combineReducers({\n  birds: birdsReducer,\n});\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default () => {\n  const questions = useSelector((state) => state.birds.questionsNames);\n  const currentQuestion = useSelector((state) => state.birds.currentQuestionId);\n  const activeClassName = 'list-group-item text-center active';\n  const passiveClassName = 'list-group-item text-center';\n  const questionsContent = questions.map((q, id) => (\n    <li\n      className={id === currentQuestion ? activeClassName : passiveClassName}\n      key={q.id}\n    >\n      {q}\n    </li>\n  ));\n  return (\n    <section className=\"py-2\">\n      <ul className=\"list-group list-group-horizontal justify-content-center row\">\n        {questionsContent}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport PropTypes from 'prop-types';\nimport { format } from '../utils/myLib';\n\nconst AppPlayer = ({ url, playing, setPlaying }) => {\n  const [loading, setLoading] = useState(true); // local\n  const [seeking, setSeeking] = useState(false); // redux\n  const [played, setPlayed] = useState(0); // local\n  const [duration, setDuration] = useState(null); // local\n  const ref = useRef(null);\n  useEffect(() => {\n    setPlayed(0);\n  }, [url]);\n  const onProcess = ({ playedSeconds }) => {\n    if (!seeking) {\n      if (playedSeconds) {\n        setPlayed(playedSeconds);\n      }\n    }\n  };\n\n  const handleSeekChange = (e) => {\n    setPlayed(parseFloat(e.target.value));\n  };\n\n  const handleSeekMouseDown = () => {\n    setSeeking(true);\n  };\n\n  const handleSeekMouseUp = (e) => {\n    setSeeking(false);\n    ref.current.seekTo(parseFloat(e.target.value));\n  };\n  const timeStart = format(played);\n  const timeFinish = duration ? format(duration) : '';\n  const playPauseIcon = playing ? 'fa fa-pause' : 'fa fa-play';\n  const visualPlayer = (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <time>{timeStart}</time>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={() => {\n            setPlaying(!playing);\n          }}\n        >\n          <i className={playPauseIcon} aria-hidden=\"true\" />\n        </button>\n        <time>{timeFinish}</time>\n      </div>\n      <input\n        type=\"range\"\n        className=\"custom-range\"\n        id=\"customRange1\"\n        min={0}\n        max={duration}\n        value={played}\n        onChange={handleSeekChange}\n        onMouseUp={handleSeekMouseUp}\n        onMouseDown={handleSeekMouseDown}\n        step={0.1}\n      />\n    </>\n  );\n  const spinner = (\n    <div className=\"d-flex flex-grow-1 justify-content-center align-items-center\">\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n  return (\n    <form className=\"justify-content-center d-flex flex-column\">\n      {loading ? spinner : visualPlayer}\n      <ReactPlayer\n        url={url}\n        playing={playing}\n        width={0}\n        height={0}\n        onDuration={setDuration}\n        onProgress={onProcess}\n        onEnded={() => {\n          setPlaying(false);\n          // setPlayed(0);\n        }}\n        onReady={() => {\n          setLoading(false);\n          // setPlayed(0);\n        }}\n        ref={ref}\n      />\n    </form>\n  );\n};\n\nAppPlayer.propTypes = {\n  url: PropTypes.string.isRequired,\n  playing: PropTypes.bool.isRequired,\n  setPlaying: PropTypes.func.isRequired,\n};\nexport default AppPlayer;\n","import {\n  LOAD_DATA,\n  ON_CLICK_ANSWER,\n  ON_CLICK_NEXT_QUESTION,\n  ON_CLICK_RESTART,\n  ON_SET_PLAYING, START_LOADING,\n} from '../types';\nimport { SERVER } from '../../data';\n\nexport const loadData = () => async (dispatch) => {\n  try {\n    const response = await fetch(SERVER || '/api/questions/');\n    if (!response.ok) {\n      throw new Error('Данные с сервера не получены.');\n    }\n    const data = await response.json();\n    dispatch({\n      type: LOAD_DATA,\n      payload: {\n        data,\n        error: false,\n      },\n    });\n  } catch (e) {\n    dispatch({\n      type: LOAD_DATA,\n      payload: {\n        data: [],\n        error: true,\n      },\n    });\n  }\n};\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const onClickAnswer = (id) => ({\n  type: ON_CLICK_ANSWER,\n  payload: id,\n});\n\nexport const onClickNextQuestion = () => ({\n  type: ON_CLICK_NEXT_QUESTION,\n});\n\nexport const onClickRestart = () => ({\n  type: ON_CLICK_RESTART,\n});\n\nexport const onSetPlaying = () => ({\n  type: ON_SET_PLAYING,\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MIN_HEIGHT_IMAGE } from '../data';\nimport AppPlayer from './AppPlayer';\nimport { onSetPlaying } from '../store/actions/birds';\n\nexport default () => {\n  const isGetCorrectAnswer = useSelector(\n    (state) => state.birds.isGetCorrectAnswer,\n  );\n  const question = useSelector((state) => {\n    const current = state.birds.currentQuestionId;\n    return state.birds.questions[current].find((q) => q.correct);\n  });\n  // const [playing, setPlaying] = useState(false);\n  const playing = useSelector((state) => state.birds.playing);\n  const dispatch = useDispatch();\n  const setPlaying = () => {\n    dispatch(onSetPlaying());\n  };\n  const heightBlock = MIN_HEIGHT_IMAGE;\n  const image = isGetCorrectAnswer ? (\n    <img\n      src={question.img}\n      alt={question.name}\n      className=\"img-fluid\"\n      height={MIN_HEIGHT_IMAGE}\n    />\n  ) : (\n    <span role=\"img\" aria-label=\"bird\" style={{ fontSize: 160 }}>\n      🐦\n    </span>\n  );\n  const title = isGetCorrectAnswer ? question.name : 'Что я за птица?';\n  return (\n    <section className=\"py-2 card border-primary\">\n      <div className=\"card-body row\">\n        <div className=\"col-sm-5 d-flex flex-grow-1 justify-content-center align-items-center \">\n          <div\n            className=\"d-flex flex-grow-1 justify-content-center align-items-center \"\n            style={{ minHeight: heightBlock }}\n          >\n            {image}\n          </div>\n        </div>\n        <div className=\"col-sm-7 col-12 justify-content-center d-flex flex-column p-3\">\n          <div>\n            <h2 className=\"text-center\">{title}</h2>\n          </div>\n          <AppPlayer\n            playing={playing}\n            setPlaying={setPlaying}\n            url={question.audio}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onClickNextQuestion } from '../store/actions/birds';\n\nexport default () => {\n  const disabled = useSelector(\n    (state) => !((state.birds.questions.length - 1 > state.birds.currentQuestionId)\n    && state.birds.isGetCorrectAnswer),\n  );\n  const className = disabled\n    ? 'btn btn-primary btn-lg btn-block mt-2 disabled'\n    : 'btn btn-primary btn-lg btn-block mt-2';\n  const dispatch = useDispatch();\n  const onclickHandler = () => {\n    dispatch(onClickNextQuestion());\n  };\n  return (\n    <section>\n      <button\n        type=\"button\"\n        disabled={disabled}\n        className={className}\n        onClick={onclickHandler}\n      >\n        Дальше\n      </button>\n    </section>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AnswerItem = ({ answer, onAnswerClick }) => {\n  let className = 'btn btn-secondary my-1';\n  if (answer.clicked && answer.correct) {\n    className = 'btn btn-outline-success my-1';\n  } else if (answer.clicked && !answer.correct) {\n    className = 'btn btn-outline-danger my-1';\n  }\n  return (\n    <button\n      type=\"button\"\n      id={`d${answer.id}`}\n      className={className}\n      onClick={() => {\n        onAnswerClick(answer.id);\n      }}\n    >\n      {answer.name}\n    </button>\n  );\n};\n\nAnswerItem.propTypes = {\n  answer: PropTypes.object.isRequired,\n  onAnswerClick: PropTypes.func.isRequired,\n};\n\nexport default AnswerItem;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPlayer from 'react-player';\nimport AnswerItem from '../AnswerItem';\nimport { onClickAnswer } from '../../store/actions/birds';\n\nexport default () => {\n  const answers = useSelector((state) => {\n    const correct = state.birds.currentQuestionId;\n    return state.birds.questions[correct].map((el) => ({\n      id: el.id,\n      name: el.name,\n      clicked: el.clicked,\n      correct: el.correct,\n    }));\n  });\n  const isGetCorrectAnswer = useSelector(\n    (state) => state.birds.isGetCorrectAnswer,\n  );\n  const dispatch = useDispatch();\n  const [playing, setPlaying] = useState(true);\n  const [url, setUrl] = useState('');\n  const [key, setKey] = useState('');\n  const onAnswerClick = (id) => {\n    const answer = answers.find((el) => el.id === id);\n    if (!isGetCorrectAnswer && !answer.clicked) {\n      if (answer.correct) {\n        setUrl('/sounds/correct.mp3');\n        setPlaying(true);\n        // force update\n        // new Audio Not implemented: HTMLMediaElement.prototype.play test error ???\n        setKey(`${Math.random()}`);\n      } else {\n        setUrl('/sounds/wrong.mp3');\n        setPlaying(true);\n        setKey(`${Math.random()}`); // force update\n      }\n    }\n    dispatch(onClickAnswer(id));\n  };\n  return (\n    <section className=\"col-md-5\">\n      <div className=\"btn-group-vertical d-flex\">\n        {answers.map((el) => (\n          <AnswerItem key={el.id} answer={el} onAnswerClick={onAnswerClick} />\n        ))}\n        <ReactPlayer key={key} width={0} height={0} url={url} playing={playing} />\n      </div>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport AppPlayer from './AppPlayer';\n\nexport default () => {\n  const [playing, setPlaying] = useState(false);\n  const answer = useSelector((state) => state.birds.questions[state.birds.currentQuestionId].find(\n    (el) => el.id === state.birds.activeId,\n  ));\n  return (\n    <div className=\"mx-0 row pt-1\">\n      <div className=\"col-sm-5 d-flex flex-grow-1 justify-content-center align-items-center \">\n        <div\n          className=\"d-flex flex-grow-1 justify-content-center align-items-center pt-3\"\n        >\n          <img src={answer.img} alt={answer.name} className=\"img-fluid\" />\n        </div>\n      </div>\n      <div className=\"col-sm-7 col-12\">\n        <div>\n          <h2 className=\"text-center\">{answer.name}</h2>\n        </div>\n        <div>\n          <p className=\"text-center\">{answer.latinName}</p>\n        </div>\n        <AppPlayer\n          playing={playing}\n          setPlaying={setPlaying}\n          url={answer.audio}\n        />\n      </div>\n      <p className=\"text-justify pt-3\">{answer.description}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport BirdInfo from './BirdInfo';\n\nexport default () => {\n  const isClickedSomeAnswer = useSelector((state) => {\n    const correct = state.birds.currentQuestionId;\n    return state.birds.questions[correct].some((el) => el.clicked);\n  });\n  return (\n    <section className=\"col-md-7 d-flex justify-content-center align-items-center\">\n      {isClickedSomeAnswer ? (\n        <BirdInfo />\n      ) : (\n        <p className=\"text-center h4 p-2\">\n          Послушайте плеер и выберите название птицы, чей голос прозвучал...\n        </p>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\n\nexport default () => (\n  <h1>\n    Songbird\n    <span role=\"img\" aria-label=\"bird\">\n      🐦\n    </span>\n  </h1>\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Logo from './Logo';\n\nexport default () => {\n  const score = useSelector((state) => state.birds.totalScore);\n  return (\n    <header className=\"row\">\n      <div className=\"col-sm-6 col text-center\">\n        <Logo />\n      </div>\n      <div className=\"col-sm-6 text-center h1 text-primary\">\n        Score:\n        <span> </span>\n        <span className=\"badge badge-pill badge-primary score\">{score}</span>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport QuestionNavigator from './QuestionNavigator';\nimport Question from './Question';\nimport Next from './Next';\nimport AnswersList from './AnswerList/AnswerList';\nimport Information from './Information';\nimport Header from './Header';\n\nexport default () => (\n  <>\n    <Header />\n    <QuestionNavigator />\n    <Question />\n    <Next />\n    <div className=\"row py-3 mx-0\">\n      <AnswersList />\n      <Information />\n    </div>\n  </>\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Logo from '../Logo';\nimport { onClickRestart } from '../../store/actions/birds';\nimport { MAX_SCORE } from '../../data';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const onClickHandler = () => {\n    dispatch(onClickRestart());\n  };\n  const score = useSelector((state) => state.birds.totalScore);\n  const restart = (\n    <button\n      className=\"btn btn-primary btn-lg btn-block mt-2\"\n      type=\"button\"\n      onClick={onClickHandler}\n    >\n      Попробовать еще раз\n    </button>\n  );\n  const win = (\n    <div>\n      <div>Вот ваш приз</div>\n      <div style={{ fontSize: 150 }}>\n        <span role=\"img\" className=\"cake\" aria-label=\"bird\">\n          🎂\n        </span>\n      </div>\n    </div>\n  );\n  return (\n    <div className=\"d-flex flex-grow-1 justify-content-center align-items-center vh-100\">\n      <div className=\"text-center\">\n        <Logo />\n        <h2>Поздравляю!</h2>\n        <p className=\"h4\">{`Вы набрали ${score} из  ${MAX_SCORE} баллов`}</p>\n        {score === MAX_SCORE ? win : restart}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Logo from './Logo';\n\nexport default () => (\n  <div className=\"d-flex flex-grow-1 justify-content-center align-items-center vh-100\">\n    <div className=\"text-center\">\n      <Logo />\n      <h2>Ожидаем ~ 20-30 sek (Heroku free)</h2>\n      <div className=\"spinner-border text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Logo from './Logo';\nimport { loadData, startLoading } from '../store/actions/birds';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const onClickHandler = () => {\n    dispatch(startLoading());\n    dispatch(loadData());\n  };\n  return (\n    <div className=\"d-flex flex-grow-1 justify-content-center align-items-center vh-100\">\n      <div className=\"text-center\">\n        <Logo />\n        <h2>Ошибка загрузки данных</h2>\n        <div style={{ fontSize: 150 }}>\n          <span role=\"img\" aria-label=\"bird\">\n            ☹️\n          </span>\n        </div>\n        <button\n          className=\"btn btn-primary btn-lg btn-block mt-2\"\n          type=\"button\"\n          onClick={onClickHandler}\n        >\n          Попробовать еще раз\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Quiz from './Quiz';\nimport Report from './Report/Report';\nimport Loading from './Loading';\nimport { loadData } from '../store/actions/birds';\nimport ErrorLoading from './ErrorLoading';\n\nexport default () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadData());\n  }, [dispatch]);\n  const isError = useSelector((state) => state.birds.error);\n  const isLoading = useSelector((state) => state.birds.loading);\n  const isFinished = useSelector(\n    (state) => state.birds.isGetCorrectAnswer\n      && state.birds.questions.length - 1 === state.birds.currentQuestionId,\n  );\n\n  if (isError) {\n    return (\n      <main>\n        <ErrorLoading />\n      </main>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <main>\n        <Loading />\n      </main>\n    );\n  }\n\n  const content = isFinished ? <Report /> : <Quiz />;\n  return <main>{content}</main>;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}